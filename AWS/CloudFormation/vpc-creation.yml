---
AWSTemplateFormatVersion: "2010-09-09"

Description: >
  The template is used to create a VPC with CIDR provided as parameter.

#
#PARAMETERS used to Create VPC and subnets
#
Parameters:
  VPCCIDR: 
    Description: The CIDR(/16) value for VPC
    Type: String
  AZs:
    Description: The list of AZs
    Type: List<String>
  PublicSubnet1CIDR: 
    Description: The PublicSubnet1CIDR(/24) value for VPC
    Type: String
  PublicSubnet2CIDR: 
    Description: The PublicSubnet2CIDR(/24) value for VPC
    Type: String
  PublicSubnet3CIDR: 
    Description: The PublicSubnet3CIDR(/24) value for VPC
    Type: String
  PrivateSubnet1CIDR: 
    Description: The PrivateSubnet1CIDR(/24) value for VPC
    Type: String
  PrivateSubnet2CIDR: 
    Description: The PrivateSubnet2CIDR(/24) value for VPC
    Type: String
  PrivateSubnet3CIDR: 
    Description: The PrivateSubnet3CIDR(/24) value for VPC
    Type: String
  Environment:
    Description: The application environment
    Type: String
  StackName:
    Description: The Root stack name
    Type: String

#
#RESOURCES created
#
Resources:

#VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Join [ "-", [ "vpc",!Ref "AWS::Region",!Ref Environment,!Ref StackName ] ]
        - Key: Environment
          Value: !Ref Environment

#Public Subnets          
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !Ref AZs]
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join [ "-", [ "subnet",!Select [0, !Ref AZs],"public",!Ref Environment,!Ref StackName  ] ]
        - Key: Environment
          Value: !Ref Environment

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !Ref AZs]
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join [ "-", [ "subnet",!Select [1, !Ref AZs],"public",!Ref Environment,!Ref StackName  ] ]
        - Key: Environment
          Value: !Ref Environment
        
  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [2, !Ref AZs ]
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet3CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join [ "-", [ "subnet",!Select [2, !Ref AZs],"public",!Ref Environment,!Ref StackName  ] ]
        - Key: Environment
          Value: !Ref Environment

#Private Subnets   
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !Ref AZs ]
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join [ "-", [ "subnet",!Select [0, !Ref AZs],"private",!Ref Environment,!Ref StackName  ] ]
        - Key: Environment
          Value: !Ref Environment

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !Ref AZs ]
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join [ "-", [ "subnet",!Select [1, !Ref AZs],"private",!Ref Environment,!Ref StackName  ] ]
        - Key: Environment
          Value: !Ref Environment

  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [2, !Ref AZs ]
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet3CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join [ "-", [ "subnet",!Select [2, !Ref AZs],"private",!Ref Environment,!Ref StackName  ] ]
        - Key: Environment
          Value: !Ref Environment

#Routes/ RouteTable/ Gateway   
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join [ "-", [ "routeTable","public",!Ref Environment,!Ref StackName  ] ]
        - Key: Environment
          Value: !Ref Environment

  igwName:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Join [ "-", [ "internetGateway",!Ref Environment,!Ref StackName  ] ]
        - Key: Environment
          Value: !Ref Environment
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref igwName
  
  routeName:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref igwName

  routeTableAssocName1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  routeTableAssocName2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  routeTableAssocName3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet3
      RouteTableId: !Ref PublicRouteTable

#Call stack to create Security groups for instances in AZ1
  secGroupAZ1:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://cloudformation-templates-atu.s3.amazonaws.com/security-group-creation.yml
      TimeoutInMinutes: 5
      Parameters:
        VPC: !Ref VPC
        AZ: !Select [0, !Ref AZs ]
        PublicSubnetCIDR: !Ref PublicSubnet1CIDR
        PrivateSubnetCIDR: !Ref PrivateSubnet1CIDR
        Environment: !Ref Environment
        StackName: !Ref StackName

#Call stack to create Security groups for instances in AZ2
  secGroupAZ2:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://cloudformation-templates-atu.s3.amazonaws.com/security-group-creation.yml
      TimeoutInMinutes: 5
      Parameters:
        VPC: !Ref VPC
        AZ: !Select [1, !Ref AZs ]
        PublicSubnetCIDR: !Ref PublicSubnet2CIDR
        PrivateSubnetCIDR: !Ref PrivateSubnet2CIDR
        Environment: !Ref Environment
        StackName: !Ref StackName

#Call stack to create Security groups for instances in AZ2
  secGroupAZ3:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://cloudformation-templates-atu.s3.amazonaws.com/security-group-creation.yml
      TimeoutInMinutes: 5
      Parameters:
        VPC: !Ref VPC
        AZ: !Select [2, !Ref AZs ]
        PublicSubnetCIDR: !Ref PublicSubnet3CIDR
        PrivateSubnetCIDR: !Ref PrivateSubnet3CIDR
        Environment: !Ref Environment
        StackName: !Ref StackName

#Call stack to create NACL for all subnets
  naclCreation:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://cloudformation-templates-atu.s3.amazonaws.com/nacl-creation.yml
      TimeoutInMinutes: 5
      Parameters:
        VPC: !Ref VPC
        VPCCIDR: !Ref VPCCIDR
        PublicSubnet1: !Ref PublicSubnet1
        PublicSubnet2: !Ref PublicSubnet2
        PublicSubnet3: !Ref PublicSubnet3
        PrivateSubnet1: !Ref PrivateSubnet1
        PrivateSubnet2: !Ref PrivateSubnet2
        PrivateSubnet3: !Ref PrivateSubnet3
        Environment: !Ref Environment
        StackName: !Ref StackName

  rdsDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for RDS Instance
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
        - !Ref PrivateSubnet3

Outputs:
#VPC
  VPC:
     Description: The ID of the VPC
     Value: !Ref VPC

#Subnets
  PublicSubnet1:
     Description: The public subnet
     Value: !Ref PublicSubnet1
  PrivateSubnet1:
     Description: The private subnet 1
     Value: !Ref PrivateSubnet1
  PublicSubnet2:
     Description: The public subnet
     Value: !Ref PublicSubnet2
  PrivateSubnet2:
     Description: The private subnet 1
     Value: !Ref PrivateSubnet2
  PublicSubnet3:
     Description: The public subnet
     Value: !Ref PublicSubnet3
  PrivateSubnet3:
     Description: The private subnet 1
     Value: !Ref PrivateSubnet3
  rdsDBSubnetGroup:
     Description: The security group for DB in private subnet
     Value: !Ref rdsDBSubnetGroup

#Security Groups 
  secJumpbox1:
     Description: The security group for jumpbox 1
     Value: !GetAtt secGroupAZ1.Outputs.secJumpbox
  secEc2Private1:
     Description: The security group for ec2 instances in private subnet 1
     Value: !GetAtt secGroupAZ1.Outputs.secEc2Private
  secDBPrivate1:
     Description: The security group for DB in private subnet1
     Value: !GetAtt secGroupAZ1.Outputs.secDBPrivate
  secJumpbox2:
     Description: The security group for jumpbox 2
     Value: !GetAtt secGroupAZ2.Outputs.secJumpbox
  secEc2Private2:
     Description: The security group for ec2 instances in private subnet 2
     Value: !GetAtt secGroupAZ2.Outputs.secJumpbox
  secDBPrivate2:
     Description: The security group for DB in private subnet 2
     Value: !GetAtt secGroupAZ2.Outputs.secJumpbox
  secJumpbox3:
     Description: The security group for jumpbox 3
     Value: !GetAtt secGroupAZ3.Outputs.secJumpbox
  secEc2Private3:
     Description: The security group for ec2 instances in private subnet 3
     Value: !GetAtt secGroupAZ3.Outputs.secJumpbox
  secDBPrivate3:
     Description: The security group for DB in private subnet 3
     Value: !GetAtt secGroupAZ3.Outputs.secJumpbox
